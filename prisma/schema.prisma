// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Modelo de Usuario
model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  estado    Boolean   @default(true)
  token     String?
  verificationCode String?
  role      String    @default("user")

  reviews   Review[]
  orders    Order[] @relation(name: "UserToOrder")
  cart      CartItem[] @relation(name: "UserToCartItem")
  games     Game[]
}

model Game {
  id            Int         @id @default(autoincrement())
  title         String      @unique
  description   String
  price         Float
  publisher     String
  createdAt     DateTime    @default(now())
  estaOferta    Boolean     @default(false)
  estado        Boolean     @default(true)

  image         String?
  bannerImage   String?

  user          User        @relation(fields: [userId], references: [id])
  userId        Int

  categoria     Categoria?  @relation(fields: [categoriaId], references: [id])
  categoriaId   Int?

  plataforma    Plataforma? @relation(fields: [plataformaId], references: [id])
  plataformaId  Int?

  reviews       Review[]
  cartItems     CartItem[]  @relation(name: "GameToCartItem")
  orders        Order[]     @relation(name: "GameToOrder")
}

model Review {
  id      Int    @id @default(autoincrement())
  content String
  stars   Int

  user    User   @relation(fields: [userId], references: [id])
  userId  Int

  game    Game   @relation(fields: [gameId], references: [id])
  gameId  Int
}

model Order {
  id        Int      @id @default(autoincrement())
  total     Float
  createdAt DateTime @default(now())
  code      String   @unique

  user      User     @relation(name: "UserToOrder", fields: [userId], references: [id])
  userId    Int

  game      Game?     @relation(name: "GameToOrder", fields: [gameId], references: [id])
  gameId    Int?
}

model CartItem {
  id      Int   @id @default(autoincrement())

  user    User  @relation(name: "UserToCartItem", fields: [userId], references: [id])
  userId  Int

  game    Game  @relation(name: "GameToCartItem", fields: [gameId], references: [id])
  gameId  Int
}

model News {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  imageUrl  String?
  createdAt DateTime @default(now())
  activo    Boolean  @default(true)
}

model Categoria {
  id      Int     @id @default(autoincrement())
  nombre  String  @unique

  games   Game[]
}

model Plataforma {
  id      Int     @id @default(autoincrement())
  nombre  String  @unique
  imagenPlataforma String?

  games   Game[]
}
